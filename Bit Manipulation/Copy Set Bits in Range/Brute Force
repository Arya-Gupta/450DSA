// Time Complexity - Since we run the loop from l to r, time taken is O(r - l).
// Space Complexity - Since we do not use any extra space, space complexity is O(1).
// Explanation - We run a loop from r to l.
At every position, we check if y has a 1 bit. 
If it does, we set x's bit at the same position to 1 using the AND gate. 

class Solution{
    public:
    int setSetBit(int x, int y, int l, int r){
        for(int i = l; i <= r; i++){
            int mask = 1 << i - 1;
            if(y & mask) x = x | mask;
        }
        return x;
    }
};
